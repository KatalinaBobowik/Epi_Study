configfile: "ControlMali_IDs.yaml"

sample=config["samples"]

rule all:
	input:
		expand("/scratch/punim0586/kat/MaliSamplesFastQC/{sample}_1_fastqc.html", sample=config["samples"]),
		expand("/scratch/punim0586/kat/MaliSamplesFastQC/{sample}_2_fastqc.html", sample=config["samples"]),
		expand("/scratch/punim0586/kat/MaliSamplesFastQC/{sample}_1_fastqc.zip", sample=config["samples"]),
		expand("/scratch/punim0586/kat/MaliSamplesFastQC/{sample}_2_fastqc.zip", sample=config["samples"]),
		expand("/scratch/punim0586/kat/MaliSamplesMapped/{sample}_Aligned.sortedByCoord.out.bam", sample=config["samples"]),
		expand("/scratch/punim0586/kat/MaliSamplesMapped/{sample}_Aligned.sortedByCoord.out.bam", sample=config["samples"]),
		expand("/scratch/punim0586/kat/MaliSamplesMapped/{sample}_Unmapped.out.mate1", sample=config["samples"]),
		expand("/scratch/punim0586/kat/MaliSamplesMapped/{sample}_Unmapped.out.mate2", sample=config["samples"])

rule trimmomatic:
	input:
		r1="/scratch/punim0586/kat/ControlSamples_Mali/{sample}/{sample}_1.fastq.gz",
		r2="/scratch/punim0586/kat/ControlSamples_Mali/{sample}/{sample}_2.fastq.gz"
	output:
		r1="/scratch/punim0586/kat/MaliDataTrimmed/{sample}_1.fastq.gz",
		r2="/scratch/punim0586/kat/MaliDataTrimmed/{sample}_2.fastq.gz",
		# reads where trimming entirely removed the mate
		r1_unpaired="/scratch/punim0586/kat/MaliDataTrimmed/{sample}_1.unpaired.fastq.gz",
		r2_unpaired="/scratch/punim0586/kat/MaliDataTrimmed/{sample}_2.unpaired.fastq.gz"
	log:
		"/scratch/punim0586/kat/101BPIndonesianSamples/logs/trimmomatic/{sample}.log"
	threads: 12
	shell:
		"module load web_proxy; module load java; java -jar /data/cephfs/punim0586/kbobowik/bin/Trimmomatic-0.36/trimmomatic-0.36.jar PE "
		"-threads {threads} -phred33 {input.r1} {input.r2} {output.r1} "
		"{output.r1_unpaired} {output.r2} {output.r2_unpaired} LEADING:20 TRAILING:20 MINLEN:90 -trimlog {log}"

rule fastqc:
	input:
		["/scratch/punim0586/kat/MaliDataTrimmed/{sample}_1.fastq.gz", "/scratch/punim0586/kat/MaliDataTrimmed/{sample}_2.fastq.gz"]
	output:
		"/scratch/punim0586/kat/MaliSamplesFastQC/{sample}_1_fastqc.html",
		"/scratch/punim0586/kat/MaliSamplesFastQC/{sample}_2_fastqc.html",
		"/scratch/punim0586/kat/MaliSamplesFastQC/{sample}_1_fastqc.zip",
		"/scratch/punim0586/kat/MaliSamplesFastQC/{sample}_2_fastqc.zip"
	conda:
		"envs/QC.yaml"
	log:
		"/scratch/punim0586/kat/101BPIndonesianSamples/logs/fastqc/{sample}.log"
	threads: 12
	shell:
		"module load web_proxy; fastqc {input} -t {threads} --extract --outdir=/scratch/punim0586/kat/MaliSamplesFastQC/ &> {log}"

rule star:
	input:
		f1="/scratch/punim0586/kat/MaliDataTrimmed/{sample}_1.fastq.gz",
		f2="/scratch/punim0586/kat/MaliDataTrimmed/{sample}_2.fastq.gz",
		dir=directory("/scratch/punim0586/kat/101BPIndonesianGenome"),
		gtf="/data/cephfs/punim0586/shared/genomes/hg38/GTF_annotation/Homo_sapiens.GRCh38.90.gtf"
	output:
		"/scratch/punim0586/kat/MaliSamplesMapped/{sample}_Aligned.sortedByCoord.out.bam",
		"/scratch/punim0586/kat/MaliSamplesMapped/{sample}_Unmapped.out.mate1",
		"/scratch/punim0586/kat/MaliSamplesMapped/{sample}_Unmapped.out.mate2"
	log:
		"/scratch/punim0586/kat/101BPIndonesianSamples/logs/star/{sample}.log"
	threads: 12
	shell:
		# unfortunately I have no better way of doing it- define sample name then use that as dirname
		"module load web_proxy; module load star/2.7.3a; x=`basename {input.f1} _1.fastq.gz`; STAR --genomeDir {input.dir} "
		"--readFilesIn {input.f1} {input.f2} "
		"--runThreadN {threads} --sjdbOverhang 100 "
		"--readFilesCommand zcat "
		"--outFileNamePrefix /scratch/punim0586/kat/MaliSamplesMapped/${{x}}_ "
		"--outSAMunmapped Within "
		"--outReadsUnmapped Fastx "
		"--twopassMode Basic "
		"--sjdbGTFfile {input.gtf} "
		"--outSAMtype BAM SortedByCoordinate &> {log}"
